<div class="collection-page" data-section-id="{{ section.id }}" data-section-type="collection-section">
{% assign number = section.settings.products_per_page %}
{% paginate collection.products by number %}

<h1 class="desktop-6 desktop-push-3 tablet-3 mobile-3">
  {% if collection.handle == 'all' %}{{ 'collections.general.all_products' | t }}{% else %}{{ collection.title }}{% endif %}
</h1>

<div id="collection-description" class="desktop-12 tablet-6 mobile-3">
  <div class="rte">
    {{ collection.description | remove: "[banner]" }}
  </div>
</div>

<div class="clear"></div>


<!-- Start Sidebar -->
{% if section.settings.show_sidebar %}
  {% render 'collection-sidebar', collection: collection %}
{% endif %}
<!-- End Sidebar -->


<div class="{% if section.settings.show_sidebar %}desktop-9 tablet-6{% else %}desktop-12 tablet-6{% endif %} mobile-3">

  {% if section.settings.show_sidebar == false and section.blocks.size >= 1 %}
    <div id="full-width-filter" class="desktop-12 tablet-6 mobile-3">
      {% for block in section.blocks %}
      {% if block.type == 'filter' %}
        <div class="filter">
          {% assign tags = block.settings.tags  | replace: ' ,', ',' | replace: ', ', ',' | split: ',' %}
          <select class="styled-select coll-filter alpha">
            <option value="">{{ block.settings.title | escape }}</option>
            {% for tag in tags %}
            {% if current_tags contains tag %}
            <option value="{{ tag | handle }}" selected>{{ tag }}</option>
            {% elsif collection.all_tags contains tag %}
            <option value="{{ tag | handle }}">{{ tag }}</option>
            {% endif %}
            {% endfor %}
          </select>
        </div>
      {% elsif block.type == 'sort' %}
      <div class="filter">
        <select id="sort-by" class="styled-select">
          <option value="manual">{{ 'collections.sorting.featured' | t }}</option>
          <option value="price-ascending">{{ 'collections.sorting.price_ascending' | t }}</option>
          <option value="price-descending">{{ 'collections.sorting.price_descending' | t }}</option>
          <option value="title-ascending">{{ 'collections.sorting.az' | t }}</option>
          <option value="title-descending">{{ 'collections.sorting.za' | t }}</option>
          <option value="created-ascending">{{ 'collections.sorting.date_ascending' | t }}</option>
          <option value="created-descending">{{ 'collections.sorting.date_descending' | t }}</option>
          <option value="best-selling">{{ 'collections.sorting.best_selling' | t }}</option>
        </select>
      </div>
      {% endif %}
      {% endfor %}
    </div>
  {% endif %}

  <div id="product-loop">

    {% for product in collection.products %}
      {% assign products_per_row = section.settings.products_per_row %}
      <div id="product-listing-{{ product.id }}" class="product-index {% if products_per_row == 6 %}desktop-2{% cycle ' first', '', '', '', '', ' last' %}{% elsif products_per_row == 4 %}desktop-3{% cycle ' first', '', '', ' last' %}{% elsif products_per_row == 3 %}desktop-4{% cycle ' first', '', ' last' %}{% elsif products_per_row == 5 %}desktop-fifth{% cycle ' first', '', '', '', ' last' %}{% elsif products_per_row == 2 %}desktop-6{% cycle ' first', ' last' %}{% endif %} tablet-half mobile-half" data-alpha="{{ product.title }}" data-price="{{ product.price }}"  data-product-id="{{ product.id }}">
        {% render 'product-listing', product: product, collection: collection %}
      </div>
    {% endfor %}

  </div>
</div>

<script>
  Shopify.queryParams = {};

  if (location.search.length) {
    for (var aKeyValue, i = 0, aCouples = location.search.substr(1).split('&'); i < aCouples.length; i++) {
      aKeyValue = aCouples[i].split('=');
      if (aKeyValue.length > 1) {
        Shopify.queryParams[decodeURIComponent(aKeyValue[0])] = decodeURIComponent(aKeyValue[1]);
      }
    }
  }
  /* Sort by */
  jQuery('#sort-by')
  .val('{{ collection.sort_by | default: collection.default_sort_by  }}')
       .bind('change', function() {
    Shopify.queryParams.sort_by = jQuery(this).val();
    location.search = jQuery.param(Shopify.queryParams);
  });

  /* Filters */
  jQuery('.coll-picker').change(function() {
    if (jQuery(this).val()) {
      location.href = '/collections/' + jQuery(this).val();
    }
    else {
      location.href = '/collections/all';
    }
  });
  var collFilters = jQuery('.coll-filter');
  collFilters.change(function() {
    delete Shopify.queryParams.page;
    var newTags = [];
    collFilters.each(function() {
      if (jQuery(this).val()) {
        newTags.push(jQuery(this).val());
      }
    });
    {% if collection.handle %}
    var newURL = '/collections/{{ collection.handle }}';
    if (newTags.length) {
      newURL += '/' + newTags.join('+');
    }
    var search = jQuery.param(Shopify.queryParams);
    if (search.length) {
      newURL += '?' + search;
    }
    location.href = newURL;
    {% else %}
    if (newTags.length) {
      Shopify.queryParams.constraint = newTags.join('+');
    }
    else {
      delete Shopify.queryParams.constraint;
    }
    location.search = jQuery.param(Shopify.queryParams);
    {% endif %}
  });

  $(document).on('shopify:section:load', function(event) {
    Shopify.queryParams = {};
    if (location.search.length) {
      for (var aKeyValue, i = 0, aCouples = location.search.substr(1).split('&'); i < aCouples.length; i++) {
        aKeyValue = aCouples[i].split('=');
        if (aKeyValue.length > 1) {
          Shopify.queryParams[decodeURIComponent(aKeyValue[0])] = decodeURIComponent(aKeyValue[1]);
        }
      }
    }
    /* Sort by */
    jQuery('#sort-by')
    .val('{{ collection.sort_by | default: collection.default_sort_by  }}')
         .bind('change', function() {
      Shopify.queryParams.sort_by = jQuery(this).val();
      location.search = jQuery.param(Shopify.queryParams);
    });

    /* Filters */
    jQuery('.coll-picker').change(function() {
      if (jQuery(this).val()) {
        location.href = '/collections/' + jQuery(this).val();
      }
      else {
        location.href = '/collections/all';
      }
    });

    var collFilters = jQuery('.coll-filter');
    collFilters.change(function() {
      delete Shopify.queryParams.page;
      var newTags = [];
      collFilters.each(function() {
        if (jQuery(this).val()) {
          newTags.push(jQuery(this).val());
        }
      });
      {% if collection.handle %}
      var newURL = '/collections/{{ collection.handle }}';
      if (newTags.length) {
        newURL += '/' + newTags.join('+');
      }
      var search = jQuery.param(Shopify.queryParams);
      if (search.length) {
        newURL += '?' + search;
      }
      location.href = newURL;
      {% else %}
      if (newTags.length) {
        Shopify.queryParams.constraint = newTags.join('+');
      }
      else {
        delete Shopify.queryParams.constraint;
      }
      location.search = jQuery.param(Shopify.queryParams);
      {% endif %}
    });
  });
</script>

{% render 'pagination', paginate: paginate %}

{% endpaginate %}

</div>
{% schema %}
  {
    "name": "Collection page",
    "max_blocks":8,
    "settings": [
      {
        "type":      "range",
        "id":        "products_per_page",
        "min":       2,
        "max":       50,
        "step":      1,
        "label":     "How many products per page",
        "default":   30
      },
      {
        "type":      "range",
        "id":        "products_per_row",
        "min":       2,
        "max":       6,
        "step":      1,
        "label":     "Products per row",
        "default":   4
      },
      {
         "type": "checkbox",
         "id": "show_sidebar",
         "default": true,
         "label": "Show sidebar"
      }
    ],
	"blocks":[
      {
         "type":"menu",
         "name":"Menu",
         "settings":[
          {
            "type": "text",
            "id": "title",
            "label": "Menu title",
            "default": "Explore"
          },
          {
            "type": "link_list",
            "id": "side_nav",
            "label": "Sidebar menu",
            "info": "This menu won't show dropdown items"
          }
        ]
      },
      {
        "type":"vendor_list",
        "name":"Vendor list",
        "limit": 1,
        "settings":[
          {
            "type": "text",
            "id": "shop_by_designer_title",
            "label": "Vendor list title",
            "default": "Shop by Designer"
          }
        ]
      },
      {
         "type":"filter",
         "name":"Tag filter",
         "settings":[
          {
            "type": "text",
            "id": "title",
            "label": "Tag title",
            "default": "Filter by"
          },
          {
            "type": "textarea",
            "id": "tags",
            "label": "Tags to filter",
            "info": "Add each tag for this filter, separated by a comma"
          }
        ]
      },
      {
       "type":"image",
       "name":"Image",
       "settings":[
          {
            "type": "image_picker",
            "id": "image",
            "label": "Image"
          },
          {
            "id": "link",
            "type": "url",
            "label": "Link"
          }
        ]
      },
      {
         "type":"text",
         "name":"Rich text",
         "settings":[
          {
            "type": "text",
            "id": "title",
            "label": "Title",
            "default": "Made for you"
          },
          {
           "type": "richtext",
           "id": "sidebar_text",
           "label": "Text",
           "default": "<p>Add some text to the sidebar</p>"
          }
        ]
      },
      {
         "type":"sort",
         "name":"Sort by",
         "limit": 1,
         "settings":[
          {
            "type": "text",
            "id": "title",
            "label": "Tag title",
            "default": "Sort by"
          }
        ]
      }
    ]
}

{% endschema %}
